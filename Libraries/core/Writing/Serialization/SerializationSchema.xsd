<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DotNetRdfSchema"
    targetNamespace="http://www.dotnetrdf.org/xmlserialization#"
    elementFormDefault="qualified"
    xmlns="http://www.dotnetrdf.org/xmlserialization#"
    xmlns:mstns="http://www.dotnetrdf.org/xmlserialization#"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <!-- graph element -->
  <xs:element name="graph">
    <xs:complexType>
      <!-- graph contains a single triples element -->
      <xs:sequence>
        <xs:element name="triples" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <!-- triples contains a sequence of triple elements which may be empty -->
            <xs:sequence minOccurs="0">
              <xs:element name="triple">
                <xs:complexType>
                  <xs:sequence>
                    <xs:group ref="node" minOccurs="3" maxOccurs="3" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  
  <!-- node group -->
  <xs:group name="node">
    <xs:choice>
      <!-- bnode has simple string content -->
      <xs:element name="bnode" type="xs:string" />
      <!-- graphliteral contains a graph element -->
      <xs:element name="graphliteral">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="graph" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <!-- literal contains a value and an optional lang and/or datatype attribute -->
      <xs:element name="literal">
        <xs:complexType mixed="true">
          <xs:attribute name="datatype" type="xs:anyURI" use="optional" />
          <xs:attribute name="lang" type="xs:string" use="optional" />
        </xs:complexType>
      </xs:element>
      <!-- uri contains a value -->
      <xs:element name="uri" type="xs:anyURI" />
      <!-- variable contains a string -->
      <xs:element name="variable" type="xs:string" />
    </xs:choice>
  </xs:group>
  
  <!-- resultset element -->
  <xs:element name="resultSet">
    <xs:complexType>
      <xs:choice>
        <xs:element name="boolean" type="xs:boolean" />
        <xs:sequence>
          <xs:element name="variables">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="variable" type="xs:string" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="results">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="result">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="binding">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:group ref="node" maxOccurs="1" minOccurs="0" />
                          </xs:sequence>
                          <xs:attribute name="name" type="xs:string" />
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>
