dotNetRDF
=========

A Library for RDF manipulation and parsing in .Net using C# 3.0

Robert Vesse 2009-11
rvesse@vdesign-studios.com

Change Log
----------

This represents a summary of additions, changes and removals for the 0.4.2 release of dotNetRDF

Added
- Configuration API
 - Added a bunch of new properties which can be attached to HTTP Handler definitions to define writer behaviour
 - Added new classes that can be used to define Parsers and Writers, ASP.Net configuration auto-detects these
- Parsing
 - Added more IRdfHandler and ISparqlResultsHandler implementations
  - ResultsWriteThroughHandler for serializing SPARQL Results directly
  - MergingResultSetHandler for loading multiple result sets into a single SparqlResultSet object
- Query
 - Added a ExplainQueryProcessor which can be used to execute queries and show explanations of their evaluation
 - Additional Algebra Operators
  - Added parallelised Join and Union operators that can be used as desired
  - Added explicit operators for things like BIND, Subqueries and property paths which can be used as desired
 - Optimisation support to SPARQL Update commands wherever possible
 - Additional Optimisers
  - Added a StrictAlgebraOptimiser which transforms to the strict algebra form of the algebra
  - Added a ParallelEvaluationOptimiser which transforms the algebra into a parallel executable form where possible
  - Added an IdentityFilterOptimiser which applies Identity Filter optimisations
- Storage
 - Added initial support for Dydra (somewhat buggy)
- Writing
 - Added additional interfaces to Formatting namespace
 - Added formatters for RDF/XML and SPARQL XML Results

Changed
- Bug Fixes
 - SPARQL Tokeniser allows more than one ORDER BY keyword
 - Turtle Parser now permits nested collections i.e. ( "item" ( "subcollection" ) )
 - Fixes to AllegroGraphConnector to support 4.x HTTP protocol changes based on bug reports from Sascha Dech
- Query
 - Further refactored the Leviathan engine to make it even easier to extend
 - Optimisation Improvements
  - Improvements to internal data structures for faster evaluation
  - Subqueries now get the parent queries Algebra Optimisers applied to them
- Storage
 - Improved support for AllegroGraph 4x including support for root catalog
 - Additions to the IGenericIOManager interface
  - Added more overloads for LoadGraph() which load using an IRdfHandler

Removed

   




