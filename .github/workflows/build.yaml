name: Unit Tests
on: push
jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        framework: ["net472", "netcoreapp3.1"]
        suite: ["unittest", "dotNetRdf.Dynamic.Tests", "dotNetRdf.Inferencing.Tests", "dotNetRdf.Ontology.Tests", "dotNetRdf.Shacl.Tests", "dotNetRDF.Skos.Tests"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Run Tests
      run: dotnet test -c Release --filter "Category!=explicit" --framework ${{ matrix.framework }} --collect:"XPlat Code Coverage" Testing\${{matrix.suite}}
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage ${{matrix.suite}} ${{matrix.framework}}
        path: Testing\${{matrix.suite}}\TestResults\**\coverage.cobertura.xml
    
  fullTextTests:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Test Full-Text Indexing
      run: dotnet test -c Release --filter "Category=fulltext" --framework net472 --collect:"XPlat Code Coverage"
      
  report:
    needs: [ "test", "fullTextTests" ]
    runs-on: windows-latest
    steps:
      - name: Download coverage artifacts
        uses: actions/download-artifact@v2
      - name: Display downloaded artifacts
        run: Get-ChildItem -recurse
      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@4.5.8
        with:
          reports: '*\*\*.xml'
          targetdir: coveragereport
          reporttypes: HtmlInline;Cobertura;Badges
          tag: '${{ github.run_number }}_${{ github.run_id }}'
      -name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coveragereport\*

